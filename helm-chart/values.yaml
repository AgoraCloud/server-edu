image:
  agoracloud:
    server:
      repository: agoracloud/server-edu
      pullPolicy: Always
      tag: latest
    ui:
      repository: agoracloud/ui-edu
      pullPolicy: Always
      tag: latest

# NOTE: Everything in the config section below has to be filled out
config:
  # Server log level, comma delimited string, defaults to 'warn,error'
  logLevel: 'warn,error'
  # The domain AgoraCloud will be accessed from, ex: https://agoracloud.mydomain.com
  domain:
  # MongoDB Connection URI, see https://docs.mongodb.com/manual/reference/connection-string/
  database:
    uri:
  # Authentication tokens configuration
  token:
    # Key used to encode access tokens
    access:
      key:
    # Key used to encode refresh tokens
    refresh:
      key:
  # Credentials of the admin user created on startup
  admin:
    email:
    password:
  # Mail SMTP configuration
  smtp:
    host:
    port:
    secure:
    username:
    password:
  # The Kubernetes storage class used for deployments
  kubernetes:
    storageClass: 'default'

ui:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

server:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
